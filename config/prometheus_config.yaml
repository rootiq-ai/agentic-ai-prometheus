# Prometheus Configuration Template for Agent AI
# This file provides a comprehensive Prometheus configuration optimized for use with Prometheus Agent AI

global:
  # Global configuration
  scrape_interval: 15s          # Set the scrape interval to every 15 seconds
  evaluation_interval: 15s      # Evaluate rules every 15 seconds
  scrape_timeout: 10s           # Default timeout for scrape requests
  external_labels:
    cluster: 'prometheus-agent-ai'
    replica: '1'

# Rule files specifies a list of globs. Rules and alerts are read from all matching files.
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"
  - "/etc/prometheus/rules/*.yml"

# Alerting configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      scheme: http
      timeout: 10s
      api_version: v2

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    scheme: http

  # Prometheus Agent AI API
  - job_name: 'prometheus-agent-api'
    static_configs:
      - targets: ['prometheus-agent-api:8000', 'localhost:8000']
    scrape_interval: 30s
    metrics_path: /metrics
    scheme: http
    scrape_timeout: 10s

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: 
        - 'node-exporter:9100'
        - 'localhost:9100'
    scrape_interval: 15s
    metrics_path: /metrics
    scheme: http

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: 
        - 'cadvisor:8080'
        - 'localhost:8080'
    scrape_interval: 15s
    metrics_path: /metrics
    scheme: http

  # Alertmanager
  - job_name: 'alertmanager'
    static_configs:
      - targets: 
        - 'alertmanager:9093'
        - 'localhost:9093'
    scrape_interval: 30s
    metrics_path: /metrics
    scheme: http

  # Custom application metrics (example)
  - job_name: 'my-application'
    static_configs:
      - targets: 
        - 'app:8080'
        - 'localhost:3000'
    scrape_interval: 30s
    metrics_path: /metrics
    scheme: http
    honor_labels: true
    scrape_timeout: 10s

  # Database metrics (example - PostgreSQL exporter)
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics
    scheme: http

  # Redis metrics (example)
  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics
    scheme: http

  # Nginx metrics (example)
  - job_name: 'nginx-exporter'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    metrics_path: /metrics
    scheme: http

  # Blackbox exporter for endpoint monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://prometheus-agent-api:8000/health
        - https://httpbin.org/status/200
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Service discovery examples (commented out)
  
  # Kubernetes service discovery
  # - job_name: 'kubernetes-apiservers'
  #   kubernetes_sd_configs:
  #   - role: endpoints
  #   scheme: https
  #   tls_config:
  #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  #   relabel_configs:
  #   - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
  #     action: keep
  #     regex: default;kubernetes;https

  # Docker service discovery
  # - job_name: 'docker'
  #   dockerswarm_sd_configs:
  #   - host: unix:///var/run/docker.sock
  #     role: containers
  #   relabel_configs:
  #   - source_labels: [__meta_dockerswarm_container_label_prometheus_job]
  #     target_label: job
  #   - source_labels: [__meta_dockerswarm_container_label_prometheus_port]
  #     target_label: __address__
  #     regex: (.+)
  #     replacement: ${1}

  # Consul service discovery
  # - job_name: 'consul'
  #   consul_sd_configs:
  #   - server: 'localhost:8500'
  #     services: []
  #   relabel_configs:
  #   - source_labels: [__meta_consul_tags]
  #     regex: .*,prometheus,.*
  #     action: keep

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Remote read configuration
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint/api/v1/read"

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention.time: 15d      # Keep data for 15 days
    retention.size: 10GB     # Maximum storage size
    wal-compression: true    # Enable WAL compression

# Web configuration
web:
  # Enable admin API
  enable-admin-api: true
  # Enable lifecycle API
  enable-lifecycle: true
  # External URL for Prometheus
  external-url: http://localhost:9090
  # Maximum number of concurrent queries
  max-connections: 512
  # Read timeout
  read-timeout: 5m

# Query configuration
query:
  # Maximum number of concurrent queries
  max-concurrency: 20
  # Query timeout
  timeout: 2m
  # Maximum number of samples a single query can load into memory
  max-samples: 50000000

# Feature flags (experimental features)
# feature_flags:
#   - promql-at-modifier
#   - remote-write-receiver

# Log configuration
log:
  level: info
  format: logfmt

# Tracing configuration (optional)
# tracing:
#   endpoint: "localhost:14268"
#   sampling_fraction: 0.1
